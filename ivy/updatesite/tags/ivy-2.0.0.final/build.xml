<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.    
-->
<project default="optimize" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:openpgp="antlib:org.apache.commons.openpgp.ant">

    <property file="local.build.properties" />

    <property name="work.dir" value="${basedir}/work"/>
    <property name="updatesite.dir" value="${basedir}/dist"/>

    <target name="clean">
        <delete dir="$ {work.dir}" />
    </target>

    <!-- 
        ===================================================================================================================
        Targets to intialize an ant run with Eclipse. Will be used to manage the updatesite
        ===================================================================================================================    
      -->
    <target name="eclipse-startup-check">
        <fail message="An Eclipse install is needed to run the build. Set your Eclipse install dir into the baseLocation property." unless="baseLocation" />

        <condition property="eclipse.startup">
            <available file="${baseLocation}/startup.jar" />
        </condition>
    </target>

    <target name="eclipse-startup-classpath" depends="eclipse-startup-check" if="eclipse.startup">
        <property name="eclipse.classpath" value="${baseLocation}/startup.jar" />
    </target>

    <target name="eclipse-launcher-classpath" depends="eclipse-startup-check" unless="eclipse.startup">
        <!-- store path to newest launcher JAR in path id 'newest.equinox.launcher.path.id' -->
        <path id="newest.equinox.launcher.path.id">
            <first count="1">
                <sort>
                    <fileset dir="${baseLocation}/plugins" includes="**/org.eclipse.equinox.launcher_*.jar" />
                    <!-- Seems the default order is oldest > newest so we must reverse it.
                       The 'reverse' and 'date' comparators are in the internal antlib
                       org.apache.tools.ant.types.resources.comparators.
                    -->
                    <reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
                        <!-- 'date' inherits 'reverse's namespace -->
                        <date />
                    </reverse>
                </sort>
            </first>
        </path>

        <!-- turn the path into a property -->
        <property name="eclipse.classpath" refid="newest.equinox.launcher.path.id" />
    </target>

    <target name="eclipse-classpath" depends="eclipse-startup-classpath,eclipse-launcher-classpath">
        <echo message="Using equinox launcher jar: ${eclipse.classpath}" />
    </target>

    <!-- 
        ===================================================================================================================
    	Target to generate the Ivy feature and put it in the updatesite
        ===================================================================================================================    
      -->
    <target name="generate-ivy-feature" description="Generate the Eclipse feature for Ivy">
        <fail message="You have to specify the version of the ivy" unless="ivy.version" />
        <!-- first generate a feature descriptor with the proper version -->
        <delete file="${work.dir}/feature.xml" />
        <copy file="ivy-feature-template/feature.xml" todir="${work.dir}">
            <filterset>
                <filter token="ivy.version" value="${ivy.version}"/>
            </filterset>
        </copy>
        <!-- package the feature -->
        <jar destfile="${updatesite.dir}/features/org.apache.ivy.feature_${ivy.version}.jar">
            <fileset dir="ivy-feature-template">
                <include name="feature.properties" />
                <include name="LICENCE"/>
                <include name="NOTICE"/>
            </fileset>
            <fileset dir="${work.dir}">
                <include name="feature.xml"/>
            </fileset>
        </jar>
    </target>

    <!-- 
        ===================================================================================================================
    	Targets to manage the updatesite
        ===================================================================================================================    
      -->
    <target name="optimize-ivy" depends="pack-ivy-jars,build-digest" description="Optimize the update site for an Ivy release" />

    <target name="optimize-ivyde" depends="pack-ivyde-jars,build-digest" description="Optimize the update site for an IvyDE release" />

    <target name="prepare-pack-ivy-jars">
        <!-- prepare the working area, so copy plugin jars -->
        <delete dir="${work.dir}/updatesite/" />
        <mkdir dir="${work.dir}/updatesite/" />
        <copy todir="${work.dir}/updatesite">
            <fileset dir="${updatesite.dir}">
                <include name="plugins/org.apache.ivy_*.jar" />
            </fileset>
        </copy>
    </target>

    <target name="prepare-pack-ivyde-jars">
        <!-- prepare the working area, so copy plugin jars -->
        <delete dir="${work.dir}/updatesite/" />
        <mkdir dir="${work.dir}/updatesite/" />
        <copy todir="${work.dir}/updatesite">
            <fileset dir="${updatesite.dir}">
                <include name="plugins/org.apache.ivyde.*.jar" />
            </fileset>
        </copy>
    </target>

    <target name="do-pack-jars" depends="eclipse-classpath">
        <!-- launch the packing -->
        <java classpath="${eclipse.classpath}" classname="org.eclipse.core.launcher.Main" fork="true" failonerror="true">
            <arg value="-consolelog" />
            <arg line="-application org.eclipse.update.core.siteOptimizer"/>
            <arg line="-jarProcessor -verbose -processAll -pack"/>
            <arg line="-outputDir ${work.dir}/updatesite/plugins"/>
            <arg line="${work.dir}/updatesite/plugins"/>
        </java>
        <!-- put the packs back to the updatesite -->
        <copy todir="${updatesite.dir}">
            <fileset dir="${work.dir}/updatesite">
                <include name="plugins/*.jar.pack.gz" />
            </fileset>
        </copy>
    </target>

    <target name="pack-ivy-jars" depends="prepare-pack-ivy-jars,do-pack-jars" />

    <target name="pack-ivyde-jars" depends="prepare-pack-ivyde-jars,do-pack-jars" />

    <target name="build-digest" depends="eclipse-classpath">
        <java classpath="${eclipse.classpath}" classname="org.eclipse.core.launcher.Main" fork="true" failonerror="true">
            <arg value="-consolelog" />
            <arg line="-application org.eclipse.update.core.siteOptimizer"/>
            <arg line="-digestBuilder -digestOutputDir=${updatesite.dir}"/>
            <arg line="-siteXML=${updatesite.dir}/site.xml"/>
        </java>
    </target>

    <target name="checksum" description="Compute the checksum for every artifact to distribute">
        <checksum algorithm="MD5" fileext=".md5" format="MD5SUM">
            <fileset dir="${updatesite.dir}">
                <include name="plugins/org.apache.ivy*.jar" />
                <include name="plugins/org.apache.ivy*.jar.pack.gz" />
                <include name="features/org.apache.ivy*.jar" />
                <include name="digest.zip" />
            </fileset>
        </checksum>
        <checksum algorithm="SHA" fileext=".sha" format="MD5SUM">
            <fileset dir="${updatesite.dir}">
                <include name="plugins/org.apache.ivy*.jar" />
                <include name="plugins/org.apache.ivy*.jar.pack.gz" />
                <include name="features/org.apache.ivy*.jar" />
                <include name="digest.zip" />
            </fileset>
        </checksum>
    </target>

    <target name="verify-checksum" description="Verify the checksums of the artifacts to publish">
        <checksum algorithm="MD5" fileext=".md5" format="MD5SUM" verifyproperty="checksum.md5.ok" >
            <fileset dir="${updatesite.dir}">
                <include name="plugins/org.apache.ivy.*.jar" />
                <include name="plugins/org.apache.ivy.*.jar.pack.gz" />
                <include name="features/org.apache.ivy.*.jar" />
                <include name="digest.zip" />
            </fileset>
        </checksum>
        <fail message="MD5 Checksum verify failed !">
            <condition>
                <isfalse value="${checksum.md5.ok}"/>
            </condition>
        </fail>
        <echo message="MD5 Checksum verify passed successfully" />
        <checksum algorithm="SHA" fileext=".sha" format="MD5SUM" verifyproperty="checksum.sha.ok" >
            <fileset dir="${updatesite.dir}">
                <include name="plugins/org.apache.ivy.*.jar" />
                <include name="plugins/org.apache.ivy.*.jar.pack.gz" />
                <include name="features/org.apache.ivy.*.jar" />
                <include name="digest.zip" />
            </fileset>
        </checksum>
        <fail message="SHA Checksum verify failed !">
            <condition>
                <isfalse value="${checksum.sha.ok}"/>
            </condition>
        </fail>
        <echo message="SHA Checksum verify passed successfully" />
    </target>

	<target name="sign">
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                uri="antlib:org.apache.ivy.ant">
            <classpath>
            	<fileset dir="dist/plugins" includes="org.apache.ivy_*.final.jar" />
            </classpath>
        </taskdef>

		<ivy:settings id="sign.settingsId" file="ivysettings-signtask.xml" />
		<ivy:cachepath organisation="org.apache.commons" settingsRef="sign.settingsId" transitive="false" log="download-only"
				module="commons-openpgp" revision="1.0-SNAPSHOT" inline="true" pathid="openpgp.classpath"/>
		<ivy:cachepath organisation="bouncycastle" settingsRef="sign.settingsId" log="download-only"
				module="bcprov-jdk16" revision="140" inline="true" pathid="bouncycastle.bcprov.classpath"/>
		
		<!-- Didn't find the jdk1.6 bcpg dependency, using the jdk1.5 version instead -->
		<ivy:cachepath organisation="bouncycastle" settingsRef="sign.settingsId" transitive="false" log="download-only"
				module="bcpg-jdk15" revision="140" inline="true" pathid="bouncycastle.bcpg.classpath"/>
		
		<property file="${user.home}/ivybuild.properties" />
		<input message="please enter your PGP password: " addproperty="pgp.password"/>
		<input message="please enter your PGP keyId: " addproperty="pgp.keyId"/>
		
		<!--
			For some reason, if we use the openpgp:signer task here directly, the bouncycastle security
			provider cannot be loaded. If we launch it as a forked process everything works fine !?!
		-->
		<java classname="org.apache.tools.ant.launch.Launcher"
				fork="true">
			<classpath>
				<fileset dir="${ant.home}" includes="**/*.jar" />
				<path refid="bouncycastle.bcprov.classpath" />
				<path refid="bouncycastle.bcpg.classpath" />
				<path refid="openpgp.classpath" />
			</classpath>
			<arg line="-f build.xml" />
			<arg line="sign-internal" />
			<arg line="-Dpgp.password=${pgp.password}" />
			<arg line="-Dpgp.keyId=${pgp.keyId}" />
		</java>
	</target>
		
	<target name="sign-internal">
		<property file="build.properties" />
		<taskdef resource="org/apache/commons/openpgp/ant/antlib.xml" uri="antlib:org.apache.commons.openpgp.ant" />
		<openpgp:signer secring="${user.home}/.gnupg/secring.gpg"
						pubring="${user.home}/.gnupg/pubring.gpg"
						password="${pgp.password}" 
						keyid="${pgp.keyId}"
						asciiarmor="true">
			<fileset dir="dist" includes="**/*.jar">
				<depend targetdir="dist">
					<mapper type="glob" from="*.jar" to="*.jar.asc"/>
				</depend>
			</fileset>
			<fileset dir="dist" includes="**/*.zip">
				<depend targetdir="dist">
					<mapper type="glob" from="*.zip" to="*.zip.asc"/>
				</depend>
			</fileset>
			<fileset dir="dist" includes="**/*.gz">
				<depend targetdir="dist">
					<mapper type="glob" from="*.gz" to="*.gz.asc"/>
				</depend>
			</fileset>
		</openpgp:signer>
	</target>

</project>
