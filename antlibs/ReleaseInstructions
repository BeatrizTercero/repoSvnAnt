Instructions for making an Antlib Release:

Authors: Conor MacNeill
         Stefan Bodewig
         Magesh Umasankar
         Antoine Levy-Lambert

Note: this document is based on Ant core's ReleaseInstructions file
      <http://svn.apache.org/repos/asf/ant/core/trunk/ReleaseInstructions>
      and adapted while Stefan was preparing the 1.0 release of the
      .NET Antlib

1.  Propose a release plan for vote.  This should set out the timetable for
    the release under ideal circumstances.  The level of bugs reported
    can delay things. Generally, give a few weeks to "close" the source tree
    to further changes so people can finalise contributions, etc. At this time,
    the first beta will be cut and there will be then a period of beta testing,
    usually 1 month but this should be flexible.

2.  Note that any mention of a deadline causes a flood of bug fixes, new tasks,
    etc.  This needs to be managed as best it can. Some fixes will be applied,
    others held over. Make this clear in the release plan. The committers and
    particularly the release manager will need to make judgement calls here.
    Anything too "big" is likely to be held over.

3.  The Ant release instructions say you should create a branch at
    the freeze date.  In the case of the Antlibs (and maybe in general) it
    may be simpler and more convenient to delay the creation of a
    branch until you want to start new development in trunk.

4.  Create a file version.properties in the projects root dir or
    edit it if it already exists.  Change the value of property
    artefact.version to 1.0Beta1.

    [[ TODO: Check if the documentation files also need to be updated to point
    to the right areas of Ant's website. ]]

5.  Before a build :

    the first beta should be called 1.0Beta1, ...

    the artefact.version property in libraries.properties governs the naming of
    the distribution files.

    Update the following files for version number:

            * docs/index.html
            * version.properties (artefact.version property)

        Commit your changes.

6.  Ensure you have all the external libraries that the Antlib uses
    available to your build.

7.  Tag the version

    > svn cp https://svn.apache.org/repos/asf/ant/antlibs/dotent/trunk \
    https://svn.apache.org/repos/asf/ant/antlibs/dotnet/tags/1_0B1 \
    -m "Tagging version 1.0beta1 of .NET Antlib"

8.  Choose the correct revision number of common as your svn:externals
    property.

9.  Next build and run the tests.  Then build the distribution.  It is
    important that this be a clean build.

    To build the distribution run the distribution target.
    To build the mvn artifacts run the prepare-upload target.

10. Sign the distribution files using the following simple script
    #!/bin/sh
    for i in `/usr/bin/find distribution \( -name "*.bz2" -o -name  "*.zip" -o -name "*.gz" \)`
    do
         echo "Signing " $i
         gpg -a -b --force-v3-sigs $i
    done
    for i in `/usr/bin/find build/java-repository -type f`
    do
         echo "Signing " $i
         gpg -a -b --force-v3-sigs $i
    done

    The --force-v3-sigs will improve the interoperability with PGP 5.x,
    see <http://www.gnupg.org/(en)/documentation/faqs.html#q5.5>.

    Before you do that, ensure that the key you use is inside the KEYS
    file in Ant's svn repository - and that you perform an svn update on
    the KEYS file in /www/www.apache.org/dist/ant/

    Also make sure you have sent the key that you use to a public
    keyserver.

11. The beta distribution is now ready to go. Bundle the distribution
    directory into a tar.gz file and scp to your apache account.

    To upload mvn artifatcs to the Nexus repository manager run

    ant upload -Dupload.user=YOUR-ASF-ID -Dupload.password=SVN-PASSWORD

    Before others can see the artifacts you've uploaded, you need to
    close the staging repository that has just been created.
    See http://www.apache.org/dev/publishing-maven-artifacts.html#close-stage

    Nexus will create .md5 and .sha1 files for your .asc signatures
    that can savely be deleted via
    https://repository.apache.org/index.html#stagingRepositories
    (log in using your ASF credentials).

12. This step may become meaningful once you do a second release ;-)

    Meanwhile, convert the part of the WHATSNEW file covering the changes
    since the last release into HTML for the README file on the
    website. See the previous release directories for examples of these files.
    Add instructions and warnings (GNU tar format issues, etc).

    You may choose to use the text2html convertor present at
    http://txt2html.sourceforge.net/#test

    Name the generated file RELEASE-NOTES-x.y.z.html.

    [[ TODO: This must perhaps be an Ant task. ]]

13. Once this is uploaded, unpack things in your home directory
    and call for a release vote on dev@ant.  The vote will only pass
    if at least three PMC members have voted +1 and more +1s than -1s
    have been cast.  The vote will run for a week.

14. Once the vote has passed, push the release and RELEASE-NOTES files
    into the release directory.  Create a symbolic link named
    README.html that points to the RELEASE-NOTES.

    The files should go to
    /www/www.apache.org/dist/ant/antlibs/ANTLIB-NAME/ on people.apache.org.

15. Address the available release tags in BugZilla. Create a new tag 1.0Beta1
    and a 1.1Alpha. Assign all existing 1.0 alpha bugs to one of these release
    labels. Note that such massive changes can be done at once by choosing the
    link "Change several bugs at once" at the bottom of the bug list
    displaying the 1.0alpha bugs.

16. Once that is done, do a test download to make sure everything is OK. A
    common problem may be:
    * the file's mime type is not recognized and is interpreted as
      text/plain.  Fix it by using some .htaccess magic (AddEncoding stuff)
    * Your gz.asc files are not being displayed properly (RemoveEncoing stuff)

    If it looks OK, announce it on dev@ant and user@ant. After a few
    days pass and there are no major problems, a wider announcement is
    made (ant website, main jakarta website, announcements@jakarta.apache.org,
    etc).

    and also perform a svn update on files in minotaur's
    /www/ant.apache.org/

    Announce beta releases at freshmeat.net.

17. As problems in the beta are discovered, there may be a need for
    one or more subsequent betas. The release manager makes this
    call. Each time, the versions are updated and the above process is
    repeated. Try not to have too many betas.

18. Try to advertise the need for testing of the betas as much as possible.
    This would eliminate the need to release minor patch versions like
    we had to do when releasing Ant 1.4.

    To monitor the number of downloads, look at the access_log
    file under /usr/local/apache2/logs

19. When the final beta is considered OK, propose a vote on dev@ant to
    officially adopt the latest beta as the new release. If it is passed,
    (it usually does,) this would be labelled 1_0 and built in a similar
    fashion to the above process.

    Remember to edit the file changes.xml to contain the proper
    release version and date.

20. BUT

    This time you'll have to do some house-keeping for the old release:

    * upload the new release files to

      from distribution
      to   /www/www.apache.org/dist/ant/antlibs/dotnet/[source|binaries].
      
      and 

      [TODO need to decide on repository structure]

      from java-repository/ant/jars
      to   /www/www.apache.org/dist/java-repository/ant/jars

      this can be done using the target upload of the build.xml

    * remove the symbolic links from
      /www/www.apache.org/dist/ant/antlibs/dotnet.

    * Create proper -current symlinks in
      /www/www.apache.org/dist/ant/antlibs/dotnet.

    * remove the beta release files

    * Make sure that the symbolic link README.html points to the new
      RELEASE-NOTES.

    (**)

21. Update the ant.apache.org site :

    running svn update *.html under /www/ant.apache.org should update the
    files regenerated and committed in point 5 above (index.html, faq.html,
    antnews.html, srcdownload.html, bindownload.html).

    Update the online manual too.

22. Clean up.

    * remove the remaining files of the previous release from
      /www/www.apache.org/dist/ant/antlibs/dotnet/[source|binaries].
      This includes the old release notes.

23. If you've created a branch, now and perhaps during previous betas
    any changes on the branch must be merged back into the tree.

24. At this point in time, the release is done and announcements are made.
    PGP-sign your announcement posts.

    [[TODO: Identify the mailing lists where announcements are to be made.
      Also identify the webpages to which the announcements must go. ]]

    Apache mailing lists that should get the announcements:
    announcements@jakarta.apache.org, announcements@xml.apache.org,
    announce@apache.org, dev@ant and user@ant.

    Announce release at freshmeat.net

    Announce release in the usenet groups comp.lang.java.softwaretools
    and comp.lang.java.announce.

25. Add a new release tag to doap_*.rdf in the AntLib's trunk.

26. You can now reacquaint yourself with your family and friends.

(*)  the xdocs need to be updated on both the branch and the HEAD revision
     because traditionally the ant.apache.org web site reflects the HEAD
     revision of the xdocs, but the users downloading a distribution will get
     the xdocs and the generated html from the branch and will complain if there
     are discrepancies in version numbers.

(**) Mirrors : the srcdownload.html and bindownload.html each list a number of
     mirrors. For ant 1.6.0 the mirrors picked up the new version in 8 hours
     or less, the release having been done at midnight on Dec 18th, the
     mirrors had it on Dec 19th at 8 am. The srcdownload/bindownload pages both
     contain a note advising users to be patient immediately after the release.

Related Information

http://www.apache.org/dev/release-publishing.html
http://jakarta.apache.org/commons/releases/
http://wiki.apache.org/jakarta-commons/SigningReleases

